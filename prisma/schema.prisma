// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserRegistration {
  id_usr           Int                @id
  email            String             @unique
  password_usr     String
  createdAt_usr    DateTime           @default(now())
  updatedAt_usr    DateTime           @updatedAt
  user_insert      String
  date_insert      DateTime           @default(now())
  user_update      String
  data_update      DateTime           @default(now())
  id_admin         Int
  TabMenu          TabMenu[]
  ClientAlbum      CustomerContract[]
  Logs             Logs[]
  RecordAlbum      RecordAlbum[]
  RecordAlbumPhoto RecordPhoto[]
  Situation        Situation[]
}

model TabMenu {
  id_menu              Int                    @id
  name                 String
  description          String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  user_id              Int
  user                 UserRegistration       @relation(fields: [user_id], references: [id_usr])
  UserMenuRelationship UserMenuRelationship[]
}

model UserMenuRelationship {
  id_rum_rum   Int     @id
  cod_user_rum Int
  id_client    Int
  id_menu_rum  Int
  menu         TabMenu @relation(fields: [id_menu_rum], references: [id_menu])
}

model CustomerContract {
  id           Int              @id @default(autoincrement())
  client       String
  event_date   DateTime
  delivey_date DateTime
  id_anexo     Int
  event_place  String
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  user_id      Int
  user         UserRegistration @relation(fields: [user_id], references: [id_usr])
  RecordAlbum  RecordAlbum[]
  RecordPhoto  RecordPhoto[]
}

model Logs {
  id       Int              @id @default(autoincrement())
  user_log String
  type_log String
  user_id  Int
  user     UserRegistration @relation(fields: [user_id], references: [id_usr])
}

model RecordPhoto {
  id           Int              @id
  photo_id     Int
  photo_desc   String
  photo_widh   String
  photo_height String
  photo_size   String
  photo_order  String
  photo_Date   DateTime
  photo_lat    String
  photo_long   String
  user_id      Int
  user         UserRegistration @relation(fields: [user_id], references: [id_usr])
  RecordAlbum  RecordAlbum[]
  contract_id  Int
  contract     CustomerContract @relation(fields: [contract_id], references: [id])
}

model RecordAlbum {
  id           Int              @id
  description  String
  observation  String
  delivey_date DateTime
  album_date   DateTime
  situation    Int
  user_id      Int
  user         UserRegistration @relation(fields: [user_id], references: [id_usr])
  album_id     Int
  album        RecordPhoto      @relation(fields: [album_id], references: [id])
  contract_id  Int
  contract     CustomerContract @relation(fields: [contract_id], references: [id])
}

model Situation {
  id_situ_situ  Int              @id
  desc_situ_sit String
  suf_situ_situ String
  user_id       Int
  user          UserRegistration @relation(fields: [user_id], references: [id_usr])
}
